variables:
  IMAGE_NAME: buffalo147/dev-apps
  IMAGE_TAG: movie-app

stages:
  - build
  - deploy

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "Logging in to Docker registry..."
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - echo "Building Docker image..."
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - echo "Pushing Docker image to registry..."
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  image: alpine:latest # alpine/git is better as it includes ssh-client by default
  before_script:
    - apk add --no-cache openssh-client # Explicitly install openssh-client, not the full openssh package
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan -H $LINODE_SERVER >> ~/.ssh/known_hosts
  script:
    - echo "Deploying containerized app..."
    - | # This uses a "literal block" for the multi-line command
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@$LINODE_SERVER '
        docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS" &&
        docker pull "$IMAGE_NAME:$IMAGE_TAG" &&
        docker stop movie-app || true &&
        docker rm movie-app || true &&
        docker run -d \
          --name movie-app \
          --label "traefik.enable=true" \
          --label "traefik.http.routers.movie.rule=Host(`stream.kwadwolabs.cloud`)" \
          --label "traefik.http.routers.movie.entrypoints=websecure" \
          --label "traefik.http.routers.movie.tls.certresolver=myresolver" \
          --label "traefik.http.services.movie.loadbalancer.server.port=80" \
          "$IMAGE_NAME:$IMAGE_TAG"
      ' 